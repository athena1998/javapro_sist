1. 년도를 매개변수로 받아서 윤년, 평년을 boolean 형으로 반환하는 메서드만 선언하세요
 (  치윤법 사용 ) 
		Scanner sc = new Scanner(System.in);
		System.out.print("년도 입력 : ");
		int year = sc.nextInt();
		
		boolean isLeapYear = checkLeapYear(year);
		
		if (isLeapYear) {
			System.out.printf("%d년은 윤년 (leap year) 입니다.\n", year);
		} else {
			System.out.printf("%d년은 평년 (common year) 입니다.\n", year);
		}
		
	} // main

	private static boolean checkLeapYear(int year) {
		boolean isLeapYear = false;
		
		if(year % 4 == 0 && year % 100 !=0 || year % 400 == 0 ) {
			isLeapYear = true;
		}
		return isLeapYear;
		
	} // checkLeapYear

2. 1 ~ n 까지의 합을 구해서 반환하는   [재귀함수]를 선언하세요. 
 		int result = Recursive(10);
		System.out.println(result);

	private static int Recursive(int n) {
		
		if (n == 1 ) {
			System.out.println("1");
			return 1;
		} else {
			System.out.printf("%d ", n);
			return n + Recursive(n-1);
		}
	}

3. 로또 중복체크는 하는 isDuplicateLotto 함수를 선언하세요. ( 조건 잘 보세요 )
     ( 조건 : 중복되면 true를 반환,  중복되지 않으면 false 반환)

4. 오버로딩( Overloading) 에 대해서 설명하세요 . 
동일한 이름을 가진 메소드를 리턴값과 매개변수를 다르게 해서 중복으로 여러개 사용하는것
그러나 꼭 매개변수의 개수 또는 리턴 값이 달라야함

5. ┌      10개 항의 합     ┐을 아래와 같이 출력하는 코딩을 하세요.    
   1+2+4+7+11+16+22+29+...=??? 
  
		int sum = 0;
		int term = 1;
		int inc = 1;
		
		for(int i=0; i<10; i++) {
			sum += term;
			System.out.printf("%d+", term);
			term += inc++;
		}
		System.out.printf("\b=%d", sum);   

6. 1~100 까지의 소수의 합
   1+2+3+5+7+...97=???    
   
		int sum = 0;
		for(int i=2; i<100; i++)  {
			boolean isPrimeNum = false;
			for(int j = 2; j<i; j++) {
				if(i % j == 0) {
					isPrimeNum = true;
				}
			}
			
			if (!isPrimeNum) {
				System.out.print(i + " ");
				sum+=i;
			}
		}
		
		System.out.println("=" +sum);

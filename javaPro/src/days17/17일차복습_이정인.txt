1. "싱글톤 클래스"를 구현하는 방법에 대해서 설명하세요...
     - 애플리케이션에서 오직 한개만 객체[인스턴스]를 생성하는 패턴
     - 구현방법 
     		1) private  생성자 선언 - 외부에서 new객체를 생성할 수 있다.
     		2) private static 필드 선언 - private static	
     		3) public Synchronize	A	getInstance() {
     			if(obj == null) {
     				obj = new A();
     				return obj;
     			}
     		}
     		4) 멀티스레드 안전

2. instanceof 연산자에 대해서 설명하세요.
     - 객체가 어떤 클래스 타입인지 true/false 여부 확인
     - 주의할점 : 자식 타입부터 체크하는것이 주의할점 자식 객체 먼저 -> 부모객체 순서

3. [매개변수 다형성]에 대해서 설명하세요 .
     - 매개변수로 일반적인 변수가 아닌 객체를 보내 어떠한 객체가 매개변수로 와도 해당 객체에 맞는 값을 반환할 수 있다.

4. [] 대괄호 안에 있다. 없다 골라서 적으세요.
  1) 메서드에 static과 abstract를 함께 사용할 수 [ x ]. 
  2) 클래스에 static과 final을 동시에 사용할 수 [ o ]. 
  		static class - 중첩클래스(내부 클래스) 선언 단독으로는 사용불가
  		final class - 최종클래스
  		
  3) abstract메서드의 접근 제어자가 private일  수 [ x ]. 
  4) 메서드에 private과 final을 같이 사용할 필요 [ x ].
  
5. 클래스(OOP)의 특징에 대해서 상세히 설명하세요.
     - 캡슐화	: 접근지정자를 사용하여 필요에 따라 외부에 보여줄 메소드와 필드들을 설정하는것
     - 상속		: 부모객체의 메소드와 필드들을 자식객체에서도 사용 가능하게 하는것
     - 다형성	: 하나의 메소드에서 상황에 따라 각각 다른 결과값을 반환할 수 있게 하는것
     - 추상화	: 각 객체에서 공통적인 기능들을 추출하는것

6. abstract 키워드에 대해서 설명하세요.
     - 추상키워드로 불완전한 메소드 공통된 부분만 추출하는 기타제어자이다.

7. 인터페이스(interface) 에 대해서 상세히 설명하세요.
     - 접근제어자 interface 인터페이스명 { } 으로 사용하며 참조형 자료형을 가지고 있다.
     - 일반적인 메소드와 필드는 사용이 불가능하며 상수만 선언이 가능하다,
     - 인터페이스는 독립적으로 어떠한 기능을 수행하지는 않고 클래스의 다중상속을 도와주는 역할을 한다.
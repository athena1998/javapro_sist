1. 필드(멤버변수)를 초기화 하는 방법 및 우선 처리 순위에 대해서 설명하세요
   - 클래스 변수 초기화 :  기본값 > 명시적 초기화 > 생성자 초기화
   - 인스턴스 변수 초기화 : 기본값 > 명시적 초기화 > 인스턴스 초기화 > 생성자 초기화

2. 클래스 간의 관계에 대해서 설명하세요 .
 1)has-a 소속관계 
    - Car - Engine 클래스 간의 관계
 2)is-a 상속관계   
 
3. 상속(inheritance)에 대해서 설명하세요 
  ㄱ. 정의 :  부모객체에 있는 메소드와 변수들을 자식객체에서도 사용할 수 있는것 부모가 자식에게 코드를 주는것
  			  기존에 존재하는 클래스로 새로운 클래스 선언
  ㄴ. 장점 :  부모객체에 있는 코드들을 중복으로 쓸 필요가 없으니까 코딩량이 줄고 유지보수 용이
  ㄷ. 선언형식 : class 클래스 이름(자식객체) extends 상속하는 클래스 이름 (부모객체)
   
4. 모든 클래스의 최상위 부모클래스는 ?
   - object 클래스 (java.lang.Object)

5. 오버로딩(overload)과 오버라이딩(override)에 대해서 설명하세요 .
   - 오버로딩(overload) : 동일한 이름을 가진 메소드를 매개변수와 반환값을 다르게 해서 사용할 수 있는것 중복 함수
   - 오버라이딩(override) : 부모객체의 메소드를 재정의해서 사용하는 것 재정의 함수

6. this와 super 키워드에 대해서 설명하세요 . 
   - this : 객체 자기 자신을 가리키는 멤버변수
   - super : 부모객체의 필드들을 가지고 오는 참조변수

7. 단일 상속과 다중 상속에 대해서 설명하세요 .
   - 객체의 상속은 부모객체 하나 자식객체 하나의 단일 상속만 가능하다 그러나 인터페이스를 통해 하나의 부모객체가 
     여러 자식 객체를 상속하는 다중상속을 표현할 수 있다.
8. @Override 애노테이션(Annotation)에 대해서 설명하세요.
   - 자식 클래스에서 부모클래스의 특정 메소드를 오버라이딩 할때 해당 메소드를 오버라이딩 했다고 표시하는 주석과도 같은 기능
   - 컴파일러에게 어떠한 메소드를 오버라이딩 했다고 알려주는 역할을 한다.
   - 오버라이딩 조건에 맞게 재정의 했는지 컴파일러에 검사를 지시하는 역할
   - 코드에 메타데이터를 추가하는 방법

9. [오버라이딩 조건]에 대해서 설명하세요 .
   - 메서드 명, 리턴자료형, 매개변수가 모두 부모객체와 동일해야한다.
   - 접근지정자는 부모객체보다 넓거나 동일해야한다
   - public > protected > default (package) > private
   - 예외처리 (exception)는 부모객체보다 더 많을 수 없다. 
   - 인스턴스 메소드를 정적 메소드로 변경할 수 없다.

10. final 키워드에 대해서 설명하세요. 
   - final class 클래스 선언 : 최종클래스 (자식 클래스를 가질 수 없는 클래스
   - final 메서드 앞 : 자식 클래스에서 오버라이딩을 할 수 없는 최종 메서드
   - final 필드, 지역변수
   -

11. 업캐스팅( upcastring)과 다운 캐스팅( downcastring )에 대해서 설명하세요.
   - 클래스들 간의 형변환은 반드시 클래스 간의 상속관계가 있어야한다.
   - 변수 업캐스팅(long l = 10;) 과 비슷하게 선언하는 객체가 인스턴스 화 하는 객체보다 상위의 객체일 경우 자동 업캐스팅이 된다
	
		Employee emp1 = new Regular("kim", "서울시 강남구", "010-1123-1231", "2020.01.01", 3000);
		emp1.dispEmpInfo();
		
		// Type mismatch: cannot convert from Employee to Regular
		// 부모객체에서 자식 객체를 참조시키면 다운캐스팅이 되서 강제 클래스 형변환을 해야한다
		// 자식객체에서 부모객체를 참조시키는 업캐스팅은 자동으로 된다.
		// (변환하고자 하는 자료형) cast 연산자로 강제 형변환
		// 반드시 자식객체로 업케스팅을 한 객체만이 다운캐스팅을 할 수 있다.
		Regular emp2 = (Regular) emp1;


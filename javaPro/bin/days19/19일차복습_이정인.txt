1. days19.Ex10.java 참고 
 알파벳 대, 소문자, 숫자의  A(20), B(11)~ Z(3)
 갯수를 파악해서 #으로 막대그래프를 그리기.
  실행결과)
	 A(20) : ####################
	 B(11) : ###########
	 :
	 Z(3)  : ###	  
	 a(20) : ####################
	 b(11) : ###########
	 :
	 z(3)  : ###
	 0(20) : ####################
	 1(11) : ###########
	 :
	 9(3)  : ### 	
	    
	public static void main(String[] args) {
		String fileName = ".\\src\\days19\\Ex10.java";
		try(FileReader reader = new FileReader(fileName);) {
			int count;
			int[] countArr = new int[123];

			while ((count = reader.read()) != -1) {
				if ((count >= '0' && count <= '9') 
						|| (count >= 'a' && count <= 'z') 
						|| (count >= 'A' && count <= 'Z')) {
					int index = (int) count;
					countArr[index]++;
				} 
			} // while

			for (int i = 48; i < countArr.length; i++) {
				if ((i >= '0' && i <= '9')|| (i >= 'a' && i <= 'z') || (i >= 'A' && i <= 'Z')) {
					System.out.printf("%c (%d) : %s\n", (char) i, countArr[i], "#".repeat(countArr[i]));
				}
			}

		} catch (FileNotFoundException e) {
			System.out.println(e.toString());
		} catch (IOException e) {
			System.out.println(e.toString());
		}

	} // main


2. 문자열 다루는 클래스 및 메소드 문제.
  String data = "안녕하세요. 홍길동입니다. 이름은 홍길동입니다. 별명도 홍길동입니다.";
  ㄱ. "홍길동"을 찾아서 모든 위치를 출력하고
  ㄴ. 두 번째 "홍길동"을 본인이름으로 바꿔서 출력하세요. 
   
  실행결과)
    ㄱ. 결과
  	> 1번째 찾은 위치 : 7
	> 2번째 찾은 위치 : 19
	> 3번째 찾은 위치 : 31
	ㄴ. 결과
	안녕하세요. 홍길동입니다. 이름은 이창익입니다. 별명도 홍길동입니다. 
	
3. 파일 읽기/쓰기 문제 
   "days19.학생명단.txt" 파일을 읽어서
   String [][] students = new String[3][6];
   2차원 배열에 6명씩 채워넣고 
   결과와 같이 파일로 저장하기.
   
   참고) days19.Ex04_06.java 예제
         1차원 배열 -> 2차원 배열 변환     	

	public static void main(String[] args) {
		
		String fileName = ".\\src\\days19\\학생명단.txt";
		
		try(FileReader reader = new FileReader(fileName);) {
			int one;
			StringBuilder sb = new StringBuilder();
			while ((one = reader.read()) != -1) {
				if (one != 10) {
					sb.append((char) one);	
				} // if
			} // while
			
			String data = sb.toString();
			String[] split = data.split("\r");

			String[][] studentArr = new String[3][6];
			
			for (int i = 0; i < studentArr.length; i++) {
				for (int j = 0; j < studentArr[i].length; j++) {
					studentArr[i][j] = split[j+(6*i)];
				} // for j
			} // for i
			for (String[] strings : studentArr) {
				System.out.println(Arrays.toString(strings));
			}
		} catch (FileNotFoundException e) {
			System.out.println(e.toString());
		} catch (IOException e1) {
			System.out.println(e1.toString());
		}
		
	} // main
